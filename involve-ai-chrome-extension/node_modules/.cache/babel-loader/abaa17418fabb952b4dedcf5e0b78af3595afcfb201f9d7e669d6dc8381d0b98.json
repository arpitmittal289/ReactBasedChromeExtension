{"ast":null,"code":"import _toConsumableArray from\"D:/Full TIme/involve.ai/chromeExtension/involve-ai-chrome-extension/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/Full TIme/involve.ai/chromeExtension/involve-ai-chrome-extension/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import sendicon from'.././images/sendicon.svg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChatInterface(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newMessage=_useState4[0],setNewMessage=_useState4[1];var handleNewMessageChange=function handleNewMessageChange(event){setNewMessage(event.target.value);};var handleSendMessage=function handleSendMessage(){if(!newMessage){return;}setMessages([].concat(_toConsumableArray(messages),[{content:newMessage,sent:true}]));setNewMessage('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"My Chat App\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map(function(message,index){return/*#__PURE__*/_jsx(\"div\",{className:\"chat-message \".concat(message.sent?'sent':''),children:message.content},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message...\",value:newMessage,onChange:handleNewMessageChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,children:/*#__PURE__*/_jsx(\"img\",{src:sendicon,alt:\"Send\"})})]})]});}export default ChatInterface;","map":{"version":3,"names":["React","useState","sendicon","jsx","_jsx","jsxs","_jsxs","ChatInterface","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","newMessage","setNewMessage","handleNewMessageChange","event","target","value","handleSendMessage","concat","_toConsumableArray","content","sent","className","children","map","message","index","type","placeholder","onChange","onClick","src","alt"],"sources":["D:/Full TIme/involve.ai/chromeExtension/involve-ai-chrome-extension/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport sendicon from '.././images/sendicon.svg';\r\n\r\nfunction ChatInterface() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    const handleNewMessageChange = (event) => {\r\n        setNewMessage(event.target.value);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (!newMessage) {\r\n            return;\r\n        }\r\n        setMessages([...messages, { content: newMessage, sent: true }]);\r\n        setNewMessage('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-app\">\r\n            <div className=\"chat-header\">\r\n                <h1>My Chat App</h1>\r\n            </div>\r\n            <div className=\"chat-messages\">\r\n                {messages.map((message, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`chat-message ${message.sent ? 'sent' : ''}`}\r\n                    >\r\n                        {message.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={handleNewMessageChange}\r\n                />\r\n                <button onClick={handleSendMessage}>\r\n                    <img src={sendicon} alt=\"Send\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatInterface;"],"mappings":"0TAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEhD,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACrB,IAAAC,SAAA,CAAgCP,QAAQ,CAAC,EAAE,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAAoCZ,QAAQ,CAAC,EAAE,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhC,GAAM,CAAAG,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAIC,KAAK,CAAK,CACtCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACrC,CAAC,CAED,GAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC5B,GAAI,CAACN,UAAU,CAAE,CACb,OACJ,CACAH,WAAW,IAAAU,MAAA,CAAAC,kBAAA,CAAKZ,QAAQ,GAAE,CAAEa,OAAO,CAAET,UAAU,CAAEU,IAAI,CAAE,IAAK,CAAC,EAAC,CAAC,CAC/DT,aAAa,CAAC,EAAE,CAAC,CACrB,CAAC,CAED,mBACIV,KAAA,QAAKoB,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrBvB,IAAA,QAAKsB,SAAS,CAAC,aAAa,CAAAC,QAAA,cACxBvB,IAAA,OAAAuB,QAAA,CAAI,aAAW,CAAI,CAAC,CACnB,CAAC,cACNvB,IAAA,QAAKsB,SAAS,CAAC,eAAe,CAAAC,QAAA,CACzBhB,QAAQ,CAACiB,GAAG,CAAC,SAACC,OAAO,CAAEC,KAAK,qBACzB1B,IAAA,QAEIsB,SAAS,iBAAAJ,MAAA,CAAkBO,OAAO,CAACJ,IAAI,CAAG,MAAM,CAAG,EAAE,CAAG,CAAAE,QAAA,CAEvDE,OAAO,CAACL,OAAO,EAHXM,KAIJ,CAAC,EACT,CAAC,CACD,CAAC,cACNxB,KAAA,QAAKoB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBvB,IAAA,UACI2B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,sBAAsB,CAClCZ,KAAK,CAAEL,UAAW,CAClBkB,QAAQ,CAAEhB,sBAAuB,CACpC,CAAC,cACFb,IAAA,WAAQ8B,OAAO,CAAEb,iBAAkB,CAAAM,QAAA,cAC/BvB,IAAA,QAAK+B,GAAG,CAAEjC,QAAS,CAACkC,GAAG,CAAC,MAAM,CAAE,CAAC,CAC7B,CAAC,EACR,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAA7B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}