{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full TIme\\\\involve.ai\\\\chromeExtension\\\\involve-ai-chrome-extension\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport sendicon from '.././images/sendicon.svg';\nimport { GetDefaultMessages, GetPromptResponseMessage } from \"./Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s();\n  const [messageList, setMessageList] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [defaultMessages, setDefaultMessages] = useState([]);\n  function getStarterMessages() {\n    // setDefaultMessages(getDefaultMessages())\n    // for(let i = 0; i < defaultMessages.length; i++){\n    //     appendDefaultMessageToList(defaultMessages[i])\n    // }        \n  }\n  ;\n  function onChangeDynamicMessageInput(event) {\n    setNewMessage(event.target.value);\n  }\n  ;\n  function sendMessage() {\n    if (!newMessage) {\n      return;\n    }\n    appendNewMessageToList();\n    appendDefaultMessageToList(GetPromptResponseMessage(newMessage));\n    setNewMessage('');\n  }\n  ;\n  function appendNewMessageToList() {\n    setMessageList(messageList => {\n      return [...messageList, {\n        content: newMessage,\n        sent: true\n      }];\n    });\n  }\n  ;\n  function appendDefaultMessageToList(message) {\n    setMessageList(messageList => {\n      return [...messageList, {\n        content: message.content,\n        sent: message.sent\n      }];\n    });\n  }\n  ;\n  useEffect(() => {\n    getStarterMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatinterface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomName\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"R2D2 Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messageList.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sent ? 'sent' : 'received'}`,\n        children: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: onChangeDynamicMessageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendicon,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatInterface, \"0RMK98Mlzd0P1IpELvF2+3EYdRo=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","sendicon","GetDefaultMessages","GetPromptResponseMessage","jsxDEV","_jsxDEV","ChatInterface","_s","messageList","setMessageList","newMessage","setNewMessage","defaultMessages","setDefaultMessages","getStarterMessages","onChangeDynamicMessageInput","event","target","value","sendMessage","appendNewMessageToList","appendDefaultMessageToList","content","sent","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/Full TIme/involve.ai/chromeExtension/involve-ai-chrome-extension/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport sendicon from '.././images/sendicon.svg';\r\nimport { GetDefaultMessages, GetPromptResponseMessage } from \"./Utils\";\r\n\r\nfunction ChatInterface() {\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    const [defaultMessages, setDefaultMessages] = useState([]);\r\n\r\n    function  getStarterMessages(){\r\n        // setDefaultMessages(getDefaultMessages())\r\n        // for(let i = 0; i < defaultMessages.length; i++){\r\n        //     appendDefaultMessageToList(defaultMessages[i])\r\n        // }        \r\n    };\r\n    \r\n    \r\n    function  onChangeDynamicMessageInput(event){\r\n        setNewMessage(event.target.value);\r\n    };\r\n    \r\n    function  sendMessage(){\r\n        if (!newMessage) {\r\n            return;\r\n        }\r\n        appendNewMessageToList()\r\n        appendDefaultMessageToList(GetPromptResponseMessage(newMessage))\r\n        setNewMessage('');\r\n    };\r\n    \r\n    function  appendNewMessageToList(){\r\n        setMessageList(messageList => {\r\n            return [...messageList, { content: newMessage, sent: true }];\r\n        });\r\n        \r\n    };\r\n\r\n    function  appendDefaultMessageToList(message){\r\n        setMessageList(messageList => {\r\n            return [...messageList, { content: message.content, sent: message.sent }];\r\n        });\r\n    };\r\n    \r\n    useEffect(() => {\r\n        getStarterMessages()\r\n      }, [])\r\n\r\n    return (\r\n        <div className=\"chatinterface\">\r\n            <div className=\"roomName\">\r\n                <h1>R2D2 Project</h1>\r\n            </div>\r\n            <div className=\"messages\">\r\n                {messageList.map((message, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`message ${message.sent ? 'sent' : 'received'}`}\r\n                    >\r\n                        {message.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"message-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={onChangeDynamicMessageInput}\r\n                />\r\n                <button onClick={sendMessage}>\r\n                    <img src={sendicon} alt=\"Send\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatInterface;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}