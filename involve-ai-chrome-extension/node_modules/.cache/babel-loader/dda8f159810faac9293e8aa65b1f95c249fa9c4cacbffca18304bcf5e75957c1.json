{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full TIme\\\\involve.ai\\\\chromeExtension\\\\involve-ai-chrome-extension\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport sendicon from '.././images/sendicon.svg';\nimport { getDefaultMessages, getPromptResponseMessage } from \"./Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s();\n  const [messageList, setMessageList] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [defaultMessages, setDefaultMessages] = useState([]);\n  const getStarterMessages = () => {\n    //const defaultMessages = getDefaultMessages()\n    for (let i = 0; i < 2; i++) {}\n    appendDefaultMessageToList({\n      content: \"Welcome to R2D2!\",\n      sent: false\n    });\n    appendDefaultMessageToList({\n      content: \"Please write your prompt below, and we will give you suggestions for the possible replies\",\n      sent: false\n    });\n  };\n  const onChangeDynamicMessageInput = event => {\n    setNewMessage(event.target.value);\n  };\n  const sendMessage = () => {\n    if (!newMessage) {\n      return;\n    }\n    appendNewMessageToList();\n    appendDefaultMessageToList(getPromptResponseMessage(newMessage));\n    setNewMessage('');\n  };\n  const appendNewMessageToList = () => {\n    setMessageList(messageList => {\n      return [...messageList, {\n        content: newMessage,\n        sent: true\n      }];\n    });\n  };\n  const appendDefaultMessageToList = message => {\n    setMessageList(messageList => {\n      return [...messageList, {\n        content: message.content,\n        sent: message.sent\n      }];\n    });\n  };\n  getStarterMessages();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatinterface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomName\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"R2D2 Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messageList.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sent ? 'sent' : 'received'}`,\n        children: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: onChangeDynamicMessageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendicon,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatInterface, \"7omxFtOXKbchSH2ie1A88fhTnQA=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","sendicon","getDefaultMessages","getPromptResponseMessage","jsxDEV","_jsxDEV","ChatInterface","_s","messageList","setMessageList","newMessage","setNewMessage","defaultMessages","setDefaultMessages","getStarterMessages","i","appendDefaultMessageToList","content","sent","onChangeDynamicMessageInput","event","target","value","sendMessage","appendNewMessageToList","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/Full TIme/involve.ai/chromeExtension/involve-ai-chrome-extension/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport sendicon from '.././images/sendicon.svg';\r\nimport { getDefaultMessages, getPromptResponseMessage } from \"./Utils\";\r\n\r\nfunction ChatInterface() {\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    const [defaultMessages, setDefaultMessages] = useState([]);\r\n\r\n    const getStarterMessages = () => {\r\n        //const defaultMessages = getDefaultMessages()\r\n        for (let i = 0; i < 2; i++) {\r\n        }\r\n        appendDefaultMessageToList({content: \"Welcome to R2D2!\", sent: false})\r\n        appendDefaultMessageToList({content: \"Please write your prompt below, and we will give you suggestions for the possible replies\", sent: false})\r\n    };\r\n\r\n\r\n    const onChangeDynamicMessageInput = (event) => {\r\n        setNewMessage(event.target.value);\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (!newMessage) {\r\n            return;\r\n        }\r\n        appendNewMessageToList()\r\n        appendDefaultMessageToList(getPromptResponseMessage(newMessage))\r\n        setNewMessage('');\r\n    };\r\n\r\n    const appendNewMessageToList = () => {\r\n        setMessageList(messageList => {\r\n            return [...messageList, { content: newMessage, sent: true }];\r\n        });\r\n\r\n    };\r\n\r\n    const appendDefaultMessageToList = (message) => {\r\n        setMessageList(messageList => {\r\n            return [...messageList, { content: message.content, sent: message.sent }];\r\n        });\r\n    };\r\n\r\n    getStarterMessages()\r\n    return (\r\n        <div className=\"chatinterface\">\r\n            <div className=\"roomName\">\r\n                <h1>R2D2 Project</h1>\r\n            </div>\r\n            <div className=\"messages\">\r\n                {messageList.map((message, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`message ${message.sent ? 'sent' : 'received'}`}\r\n                    >\r\n                        {message.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"message-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={onChangeDynamicMessageInput}\r\n                />\r\n                <button onClick={sendMessage}>\r\n                    <img src={sendicon} alt=\"Send\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatInterface;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,kBAAkB,EAAEC,wBAAwB,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;IAC7B;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE,CAC5B;IACAC,0BAA0B,CAAC;MAACC,OAAO,EAAE,kBAAkB;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IACtEF,0BAA0B,CAAC;MAACC,OAAO,EAAE,2FAA2F;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;EACnJ,CAAC;EAGD,MAAMC,2BAA2B,GAAIC,KAAK,IAAK;IAC3CT,aAAa,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACb,UAAU,EAAE;MACb;IACJ;IACAc,sBAAsB,CAAC,CAAC;IACxBR,0BAA0B,CAACb,wBAAwB,CAACO,UAAU,CAAC,CAAC;IAChEC,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMa,sBAAsB,GAAGA,CAAA,KAAM;IACjCf,cAAc,CAACD,WAAW,IAAI;MAC1B,OAAO,CAAC,GAAGA,WAAW,EAAE;QAAES,OAAO,EAAEP,UAAU;QAAEQ,IAAI,EAAE;MAAK,CAAC,CAAC;IAChE,CAAC,CAAC;EAEN,CAAC;EAED,MAAMF,0BAA0B,GAAIS,OAAO,IAAK;IAC5ChB,cAAc,CAACD,WAAW,IAAI;MAC1B,OAAO,CAAC,GAAGA,WAAW,EAAE;QAAES,OAAO,EAAEQ,OAAO,CAACR,OAAO;QAAEC,IAAI,EAAEO,OAAO,CAACP;MAAK,CAAC,CAAC;IAC7E,CAAC,CAAC;EACN,CAAC;EAEDJ,kBAAkB,CAAC,CAAC;EACpB,oBACIT,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BtB,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACrBtB,OAAA;QAAAsB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACN1B,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACpBnB,WAAW,CAACwB,GAAG,CAAC,CAACP,OAAO,EAAEQ,KAAK,kBAC5B5B,OAAA;QAEIqB,SAAS,EAAG,WAAUD,OAAO,CAACP,IAAI,GAAG,MAAM,GAAG,UAAW,EAAE;QAAAS,QAAA,EAE1DF,OAAO,CAACR;MAAO,GAHXgB,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN1B,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BtB,OAAA;QACI6B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAsB;QAClCb,KAAK,EAAEZ,UAAW;QAClB0B,QAAQ,EAAEjB;MAA4B;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACF1B,OAAA;QAAQgC,OAAO,EAAEd,WAAY;QAAAI,QAAA,eACzBtB,OAAA;UAAKiC,GAAG,EAAErC,QAAS;UAACsC,GAAG,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACxB,EAAA,CAtEQD,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAwEtB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}