{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full TIme\\\\involve.ai\\\\chromeExtension\\\\involve-ai-chrome-extension\\\\src\\\\components\\\\ChatInterface.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport sendicon from '.././images/sendicon.svg';\nimport { getDefaultMessages, getPromptResponseMessage } from \"./Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [messageList, setMessageList] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [defaultMessages, setDefaultMessages] = useState([]);\n  const getStarterMessages = () => {\n    _s();\n    const [defaultMessages, setDefaultMessages] = useState([]);\n    setDefaultMessages(getDefaultMessages());\n    for (let i = 0; i < defaultMessages.length; i++) {\n      appendDefaultMessageToList(defaultMessages[i]);\n    }\n  };\n  _s(getStarterMessages, \"rVt94D5ApMMDeVQ0TyCwYxj4q1k=\");\n  const onChangeDynamicMessageInput = event => {\n    setNewMessage(event.target.value);\n  };\n  const sendMessage = () => {\n    if (!newMessage) {\n      return;\n    }\n    appendNewMessageToList();\n    appendDefaultMessageToList(getPromptResponseMessage(newMessage));\n    setNewMessage('');\n  };\n  const appendNewMessageToList = () => {\n    setMessageList(messageList => {\n      return [...messageList, {\n        content: newMessage,\n        sent: true\n      }];\n    });\n  };\n  const appendDefaultMessageToList = message => {\n    setMessageList(messageList => {\n      return [...messageList, {\n        content: message.content,\n        sent: message.sent\n      }];\n    });\n  };\n\n  //getStarterMessages()\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatinterface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomName\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"R2D2 Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), getStarterMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messageList.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sent ? 'sent' : 'received'}`,\n        children: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: onChangeDynamicMessageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendicon,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s2(ChatInterface, \"7omxFtOXKbchSH2ie1A88fhTnQA=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","sendicon","getDefaultMessages","getPromptResponseMessage","jsxDEV","_jsxDEV","ChatInterface","_s2","_s","$RefreshSig$","messageList","setMessageList","newMessage","setNewMessage","defaultMessages","setDefaultMessages","getStarterMessages","i","length","appendDefaultMessageToList","onChangeDynamicMessageInput","event","target","value","sendMessage","appendNewMessageToList","content","sent","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/Full TIme/involve.ai/chromeExtension/involve-ai-chrome-extension/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport sendicon from '.././images/sendicon.svg';\r\nimport { getDefaultMessages, getPromptResponseMessage } from \"./Utils\";\r\n\r\nfunction ChatInterface() {\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    const [defaultMessages, setDefaultMessages] = useState([]);\r\n\r\n    const getStarterMessages = () => {\r\n        const [defaultMessages, setDefaultMessages] = useState([]);\r\n        setDefaultMessages(getDefaultMessages())\r\n        for (let i = 0; i < defaultMessages.length; i++) {\r\n            appendDefaultMessageToList(defaultMessages[i])\r\n        }\r\n    };\r\n\r\n\r\n    const onChangeDynamicMessageInput = (event) => {\r\n        setNewMessage(event.target.value);\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (!newMessage) {\r\n            return;\r\n        }\r\n        appendNewMessageToList()\r\n        appendDefaultMessageToList(getPromptResponseMessage(newMessage))\r\n        setNewMessage('');\r\n    };\r\n\r\n    const appendNewMessageToList = () => {\r\n        setMessageList(messageList => {\r\n            return [...messageList, { content: newMessage, sent: true }];\r\n        });\r\n\r\n    };\r\n\r\n    const appendDefaultMessageToList = (message) => {\r\n        setMessageList(messageList => {\r\n            return [...messageList, { content: message.content, sent: message.sent }];\r\n        });\r\n    };\r\n\r\n    //getStarterMessages()\r\n    return (\r\n        <div className=\"chatinterface\">\r\n            <div className=\"roomName\">\r\n                <h1>R2D2 Project</h1>\r\n            </div>\r\n            {getStarterMessages()}\r\n            <div className=\"messages\">\r\n                {messageList.map((message, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`message ${message.sent ? 'sent' : 'received'}`}\r\n                    >\r\n                        {message.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"message-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={onChangeDynamicMessageInput}\r\n                />\r\n                <button onClick={sendMessage}>\r\n                    <img src={sendicon} alt=\"Send\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatInterface;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}