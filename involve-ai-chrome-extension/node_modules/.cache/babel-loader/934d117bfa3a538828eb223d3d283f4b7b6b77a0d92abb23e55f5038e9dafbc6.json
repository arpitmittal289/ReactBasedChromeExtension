{"ast":null,"code":"import _slicedToArray from\"D:/Full TIme/involve.ai/chromeExtension/involve-ai-chrome-extension/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';var getDummyResponse=true;var getDefaultMessageUP=\"www.example.dummyupi.com/toBeReplacedWithActualDefaultApi\";var getPromptResponseUPI=\"www.example.dummyupi.com/toBeReplacedWithActualPromptApi\";export function getDefaultMessages(){if(getDummyResponse){return getDefaultJsonMessage();}else{return getDefaultMessageFromAPI();}};export function getPromptResponseMessage(message){if(getDummyResponse){return getPromptResponseJsonMessage();}else{return getPromptResponseMessageFromAPI();}};var getDefaultJsonMessage=function getDefaultJsonMessage(){return[{content:\"Welcome to R2D2!\",sent:false},{content:\"Please write your prompt below, and we will give you suggestions for the possible replies\",sent:false}];};var getPromptResponseJsonMessage=function getPromptResponseJsonMessage(){return{content:\"This is a Dummy Response which can be used\",sent:false};};var getDefaultMessageFromAPI=function getDefaultMessageFromAPI(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){fetch(getDefaultMessageUP).then(function(response){return response.json();}).then(function(data){return setData(data);}).catch(function(error){return console.error(error);});},[]);return data;};var getPromptResponseMessageFromAPI=function getPromptResponseMessageFromAPI(){var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];useEffect(function(){fetch(getPromptResponseUPI).then(function(response){return response.json();}).then(function(data){return setData(data);}).catch(function(error){return console.error(error);});},[]);return data;};","map":{"version":3,"names":["useState","useEffect","getDummyResponse","getDefaultMessageUP","getPromptResponseUPI","getDefaultMessages","getDefaultJsonMessage","getDefaultMessageFromAPI","getPromptResponseMessage","message","getPromptResponseJsonMessage","getPromptResponseMessageFromAPI","content","sent","_useState","_useState2","_slicedToArray","data","setData","fetch","then","response","json","catch","error","console","_useState3","_useState4"],"sources":["D:/Full TIme/involve.ai/chromeExtension/involve-ai-chrome-extension/src/components/Utils.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n\r\nconst getDummyResponse = true;\r\n\r\nconst getDefaultMessageUP = \"www.example.dummyupi.com/toBeReplacedWithActualDefaultApi\"\r\nconst getPromptResponseUPI = \"www.example.dummyupi.com/toBeReplacedWithActualPromptApi\"\r\n\r\nexport function getDefaultMessages(){\r\n    if (getDummyResponse){\r\n        return getDefaultJsonMessage()\r\n    }\r\n    else{\r\n        return getDefaultMessageFromAPI()\r\n    }\r\n};\r\n\r\nexport function getPromptResponseMessage(message){\r\n    if (getDummyResponse){\r\n        return getPromptResponseJsonMessage()\r\n    }\r\n    else{\r\n        return getPromptResponseMessageFromAPI()\r\n    }\r\n};\r\n\r\nconst getDefaultJsonMessage = () => {\r\n    return [{content: \"Welcome to R2D2!\", sent: false},{content: \"Please write your prompt below, and we will give you suggestions for the possible replies\", sent: false}]\r\n};\r\n\r\nconst getPromptResponseJsonMessage = () => {\r\n    return {content: \"This is a Dummy Response which can be used\", sent: false}\r\n};\r\n\r\nconst getDefaultMessageFromAPI = () => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(getDefaultMessageUP)\r\n            .then(response => response.json())\r\n            .then(data => setData(data))\r\n            .catch(error => console.error(error));\r\n        }, []);\r\n\r\n        return data;\r\n};\r\n\r\nconst getPromptResponseMessageFromAPI = () => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(getPromptResponseUPI)\r\n            .then(response => response.json())\r\n            .then(data => setData(data))\r\n            .catch(error => console.error(error));\r\n        }, []);\r\n\r\n        return data;\r\n};"],"mappings":"yJAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAG3C,GAAM,CAAAC,gBAAgB,CAAG,IAAI,CAE7B,GAAM,CAAAC,mBAAmB,CAAG,2DAA2D,CACvF,GAAM,CAAAC,oBAAoB,CAAG,0DAA0D,CAEvF,MAAO,SAAS,CAAAC,kBAAkBA,CAAA,CAAE,CAChC,GAAIH,gBAAgB,CAAC,CACjB,MAAO,CAAAI,qBAAqB,CAAC,CAAC,CAClC,CAAC,IACG,CACA,MAAO,CAAAC,wBAAwB,CAAC,CAAC,CACrC,CACJ,CAAC,CAED,MAAO,SAAS,CAAAC,wBAAwBA,CAACC,OAAO,CAAC,CAC7C,GAAIP,gBAAgB,CAAC,CACjB,MAAO,CAAAQ,4BAA4B,CAAC,CAAC,CACzC,CAAC,IACG,CACA,MAAO,CAAAC,+BAA+B,CAAC,CAAC,CAC5C,CACJ,CAAC,CAED,GAAM,CAAAL,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAA,CAAS,CAChC,MAAO,CAAC,CAACM,OAAO,CAAE,kBAAkB,CAAEC,IAAI,CAAE,KAAK,CAAC,CAAC,CAACD,OAAO,CAAE,2FAA2F,CAAEC,IAAI,CAAE,KAAK,CAAC,CAAC,CAC3K,CAAC,CAED,GAAM,CAAAH,4BAA4B,CAAG,QAA/B,CAAAA,4BAA4BA,CAAA,CAAS,CACvC,MAAO,CAACE,OAAO,CAAE,4CAA4C,CAAEC,IAAI,CAAE,KAAK,CAAC,CAC/E,CAAC,CAED,GAAM,CAAAN,wBAAwB,CAAG,QAA3B,CAAAA,wBAAwBA,CAAA,CAAS,CACnC,IAAAO,SAAA,CAAwBd,QAAQ,CAAC,IAAI,CAAC,CAAAe,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpBd,SAAS,CAAC,UAAM,CACZkB,KAAK,CAAChB,mBAAmB,CAAC,CACrBiB,IAAI,CAAC,SAAAC,QAAQ,QAAI,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CACjCF,IAAI,CAAC,SAAAH,IAAI,QAAI,CAAAC,OAAO,CAACD,IAAI,CAAC,GAAC,CAC3BM,KAAK,CAAC,SAAAC,KAAK,QAAI,CAAAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,GAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAP,IAAI,CACnB,CAAC,CAED,GAAM,CAAAN,+BAA+B,CAAG,QAAlC,CAAAA,+BAA+BA,CAAA,CAAS,CAC1C,IAAAe,UAAA,CAAwB1B,QAAQ,CAAC,IAAI,CAAC,CAAA2B,UAAA,CAAAX,cAAA,CAAAU,UAAA,IAA/BT,IAAI,CAAAU,UAAA,IAAET,OAAO,CAAAS,UAAA,IAEpB1B,SAAS,CAAC,UAAM,CACZkB,KAAK,CAACf,oBAAoB,CAAC,CACtBgB,IAAI,CAAC,SAAAC,QAAQ,QAAI,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CACjCF,IAAI,CAAC,SAAAH,IAAI,QAAI,CAAAC,OAAO,CAACD,IAAI,CAAC,GAAC,CAC3BM,KAAK,CAAC,SAAAC,KAAK,QAAI,CAAAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,GAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAP,IAAI,CACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}